---
# yaml-language-server: $schema=https://raw.githubusercontent.com/JJGadgets/flux2-schemas/main/helmrelease-helm-v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: rook-ceph-cluster
  namespace: rook-ceph
spec:
  interval: 15m
  chart:
    spec:
      # renovate: registryUrl=https://charts.rook.io/release
      chart: rook-ceph-cluster
      version: v1.10.7
      sourceRef:
        kind: HelmRepository
        name: rook-ceph-charts
        namespace: flux-system
  install:
    createNamespace: true
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
  dependsOn:
    - name: rook-ceph-operator
      namespace: rook-ceph
  values:
    monitoring:
      enabled: true
      createPrometheusRules: true
    ingress:
      dashboard:
        ingressClassName: "nginx"
        annotations:
          cert-manager.io/cluster-issuer: "letsencrypt-staging"
          hajimari.io/enable: "true"
          hajimari.io/icon: "chess-rook"
          nginx.ingress.kubernetes.io/whitelist-source-range: "10.0.0.0/8,172.16.0.0/12,192.168.0.0/16"
        host:
          name: &host "rook.${SECRET_DOMAIN}"
          path: /
        tls:
          - hosts:
              - *host
            secretName: "rook-tls"
    configOverride: |
      [global]
      osd_pool_default_size = 1
      bdev_enable_discard = true
      bdev_async_discard = true
      bluefs_buffered_io = false
      cluster_network = 10.0.20.0/24
    cephClusterSpec:
      network:
        # provider: multus
        # selectors:
        #   cluster: network/multus-vlan20
      crashCollector:
        disable: false
      dashboard:
        enabled: true
        urlPrefix: /
        ssl: false
      mgr:
        modules:
          - name: rook
            enabled: true
          - name: pg_autoscaler
            enable: true
          - name: diskprediction_local
            enable: true

      storage:
        useAllNodes: false
        useAllDevices: false
        config:
          osdsPerDevice: "1"
        nodes:
          - name: polaris
            devices:
              - name: "/dev/disk/by-id/ata-HGST_HDN726040ALE614_K7J8YWUL"
              - name: "/dev/disk/by-id/ata-WDC_WD4003FFBX-68MU3N0_VBG8RTPR"
              - name: "/dev/disk/by-id/ata-WDC_WD40EFRX-68N32N0_WD-WCC7K4PCKY5A"
              - name: "/dev/disk/by-id/ata-WDC_WD40EFRX-68WT0N0_WD-WCC4E0CPLY9Y"
              - name: "/dev/disk/by-id/ata-WDC_WD40EFRX-68WT0N0_WD-WCC4E6TZH5LD"
          - name: capella
            devices:
              - name: "/dev/disk/by-id/ata-ST4000LM024-2AN17V_WCJ6J386"
              - name: "/dev/disk/by-id/ata-ST4000LM024-2AN17V_WCK93HWK"

      annotations:
        osd:
          k8s.v1.cni.cncf.io/networks: network/multus-vlan20

      resources:
        mgr:
          requests:
            cpu: 60m
            memory: 768M
          limits:
            cpu: 3000m
            memory: 8G
        mon:
          requests:
            cpu: 60m
            memory: 512M
          limits:
            cpu: 3000m
            memory: 4G
        osd:
          requests:
            cpu: 50m
            memory: 100M
          limits:
            cpu: 3000m
            memory: 4G
        crashcollector:
          requests:
            cpu: 15m
            memory: 64Mi
          limits:
            cpu: 1000m
            memory: 1G
        logcollector:
          requests:
            cpu: 10m
            memory: 32M
          limits:
            cpu: 800m
            memory: 1G

    cephBlockPools:
      - name: ceph-blockpool
        spec:
          failureDomain: osd
          replicated:
            size: 3
        storageClass:
          enabled: true
          name: ceph-block
          isDefault: true
          reclaimPolicy: Delete
          allowVolumeExpansion: true
          parameters:
            imageFormat: "2"
            imageFeatures: layering
            csi.storage.k8s.io/provisioner-secret-name: rook-csi-rbd-provisioner
            csi.storage.k8s.io/provisioner-secret-namespace: rook-ceph
            csi.storage.k8s.io/controller-expand-secret-name: rook-csi-rbd-provisioner
            csi.storage.k8s.io/controller-expand-secret-namespace: rook-ceph
            csi.storage.k8s.io/node-stage-secret-name: rook-csi-rbd-node
            csi.storage.k8s.io/node-stage-secret-namespace: rook-ceph
            csi.storage.k8s.io/fstype: ext4

    cephFileSystems:
      - name: ceph-fs
        spec:
          metadataPool:
            replicated:
              size: 3
            failureDomain: osd

          dataPools:
            - name: default
              replicated:
                size: 3
              failureDomain: osd

            - name: ec
              erasureCoded:
                dataChunks: 3
                codingChunks: 2
              failureDomain: osd

          metadataServer:
            activeCount: 1
            activeStandby: true
            resources:
              requests:
                cpu: 20m
                memory: 32M
              limits:
                cpu: 1600m
                memory: 2G

        storageClass:
          enabled: true
          isDefault: false
          name: ceph-fs
          pool: ceph-fs-ec
          reclaimPolicy: Delete
          allowVolumeExpansion: true
          parameters:
            csi.storage.k8s.io/provisioner-secret-name: rook-csi-cephfs-provisioner
            csi.storage.k8s.io/provisioner-secret-namespace: rook-ceph
            csi.storage.k8s.io/controller-expand-secret-name: rook-csi-cephfs-provisioner
            csi.storage.k8s.io/controller-expand-secret-namespace: rook-ceph
            csi.storage.k8s.io/node-stage-secret-name: rook-csi-cephfs-node
            csi.storage.k8s.io/node-stage-secret-namespace: rook-ceph
            csi.storage.k8s.io/fstype: ext4

    cephObjectStores:
      - name: ceph-objectstore
        spec:
          metadataPool:
            failureDomain: osd
            replicated:
              size: 3
          dataPool:
            failureDomain: osd
            erasureCoded:
              dataChunks: 3
              codingChunks: 2
          preservePoolsOnDelete: true
          gateway:
            port: 80
            resources:
              requests:
                cpu: 100m
                memory: 128M
              limits:
                memory: 2Gi
            instances: 1
          healthCheck:
            bucket:
              interval: 60s
        storageClass:
          enabled: true
          name: ceph-bucket
          reclaimPolicy: Delete
          parameters:
            region: us-east-1
