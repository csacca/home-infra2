---
version: "3"

vars:
  NODE_IP_LIST:
    sh: yq '.nodes[] | select(.controlPlane==true) | .ipAddress' provision/talos/talconfig.yaml | tr '\n' ',' | head -c -1
  NODE_IP:
    sh: echo '{{.NODE_IP_LIST}}' | tr ',' '\n' | head -n1
  ALL_NODES:
    sh: yq '.nodes[] | .ipAddress' provision/talos/talconfig.yaml | tr '\n' ',' | head -c -1
tasks:
  genconfig:
    desc: Generate Talos machine configuration files
    dir: provision/talos
    cmds:
      - talhelper genconfig {{.CLI_ARGS}}

  tf-init:
    desc: Initialize terraform dependencies
    dir: provision/terraform/matchbox
    cmds:
      - terraform init {{.CLI_ARGS}}

  tf-plan:
    desc: Show the changes terraform will make
    dir: provision/terraform/matchbox
    cmds:
      - terraform plan {{.CLI_ARGS}}

  tf-apply:
    desc: Apply the changes to Matchbox
    dir: provision/terraform/matchbox
    cmds:
      - terraform apply {{.CLI_ARGS}}

  bootstrap:
    desc: Bootstrap etcd on Talos cluster
    dir: provision/talos/clusterconfig
    cmds:
      # - talosctl --talosconfig talosconfig config endpoint {{.NODE_IP}}
      # - talosctl --talosconfig talosconfig config node {{.NODE_IP}}
      - talosctl --talosconfig talosconfig --endpoints {{.NODE_IP}} --nodes {{.NODE_IP}} bootstrap

  get-kubeconfig:
    desc: Get kubeconfig files
    dir: provision/talos/clusterconfig
    cmds:
      - talosctl --talosconfig talosconfig --endpoints {{.NODE_IP}} --nodes {{.NODE_IP}} kubeconfig ../../

  preflux:
    desc: Install cilium and kubelet-csr-approver to get the cluster in a state that's ready for flux to take over
    dir: provision/talos/clusterconfig
    cmds:
      - kubectl kustomize --enable-helm ../cni | kubectl apply -f -
      - kubectl kustomize --enable-helm ../kubelet-csr-approver | kubectl apply -f -
      - sleep 5
      - kubectl wait --for=condition=Ready nodes --all --timeout=600s

  wipe:
    desc: Wipe and reset talos cluster
    dir: provision/talos/clusterconfig
    cmds:
      - talosctl --talosconfig talosconfig reset --nodes {{.NODE_IP_LIST}} --graceful=false --reboot=true --system-labels-to-wipe STATE --system-labels-to-wipe EPHEMERAL --wait=false

  wipe-rook:
    desc: Fully wipe data disks in preparation for Ceph usage
    cmds:
      - kubectl apply -f ./cluster/tools/wipe-rook.yaml
      - kubectl wait job --for=condition=complete -l job-type=disk-wipe -n kube-system --timeout=120s
